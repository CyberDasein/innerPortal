{"version":3,"sources":["components/Menu.js","components/Question.jsx","components/Questions.js","redux/actionCreators.js","redux/actions.js","components/chat/Title.js","components/chat/MessageList.js","components/chat/Smiles.jsx","components/chat/MessageForm.js","components/chat/ChatComponent.js","components/AddQuestion.js","components/About.jsx","components/QuestionTitle.jsx","App.js","serviceWorker.js","redux/questionReducer.js","redux/messageReducer.js","redux/appReducer.js","redux/mainReducer.js","index.js","img/unnamed.jpg"],"names":["NavItem","styled","li","NavStyle","ul","Menu","className","to","useStyles","makeStyles","theme","root","marginBottom","width","heading","fontSize","typography","pxToRem","flexBasis","flexShrink","secondaryHeading","color","palette","text","secondary","details","flexDirection","btn","marginLeft","QuestionHeader","backgroundColor","FormStyle","div","QuestionStyle","Question","panel","questionTitle","answerQuestion","answers","id","deleteQuestion","classes","React","useState","expanded","setExpanded","setText","ExpansionPanel","onChange","event","isExpanded","ExpansionPanelSummary","expandIcon","aria-controls","Typography","ExpansionPanelDetails","noValidate","autoComplete","TextField","e","target","value","label","Tooltip","title","arrow","IconButton","onClick","mapDispatchToProps","answer","type","payload","connect","state","questionItem","appQuestions","map","question","key","TitleStyle","h2","Title","MessageListStyle","MessageItem","MessageList","messages","deleteMessage","isLoading","console","log","role","message","date","padding","spacing","emoji","display","flexWrap","maxWidth","SmileComponent","props","anchorEl","setAnchorEl","open","Boolean","undefined","aria-describedby","variant","currentTarget","Popover","onClose","anchorOrigin","vertical","horizontal","transformOrigin","smileChange","dataset","data-value","aria-label","form","MessageForm","handleChangeInput","setState","smile","handleSubmit","preventDefault","newQuestion","Date","toLocaleString","now","toString","setMessage","onSubmit","this","placeholder","Component","ChatComponent","fetchedMessage","axios","get","then","response","setTimeout","data","mapDispachToProps","dispatch","appChat","app","loading","AddQuestion","submitHandler","addQuestion","changeInputHandler","alert","class","htmlFor","name","About","src","img","alt","QuestionTitle","App","path","render","exact","window","location","hostname","match","initialState","mainReducer","combineReducers","action","filter","store","createStore","compose","applyMiddleware","thunk","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","module","exports"],"mappings":"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","file":"static/js/main.e70edfc2.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst NavItem = styled.li`\r\n  font-size: 32px\r\n`\r\nconst NavStyle = styled.ul`\r\n  background: #7FFFD4;\r\n`\r\n\r\nexport const Menu = () => {\r\n  return (\r\n    <NavStyle className=\"nav justify-content-center \">\r\n      <NavItem>\r\n        <Link to=\"/\" className=\"nav-link active text-dark\" >\r\n          О нас\r\n        </Link>\r\n      </NavItem>\r\n      <NavItem>\r\n        <Link to=\"/chat\" className=\"nav-link text-dark\" >\r\n          Чат\r\n        </Link>\r\n      </NavItem>\r\n      <NavItem >\r\n        <Link to=\"/questions\" className=\"nav-link text-dark\" >\r\n          Вопросы\r\n        </Link>\r\n      </NavItem>\r\n    </NavStyle>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\";\r\nimport ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\r\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport HighlightOffIcon from \"@material-ui/icons/HighlightOff\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport styled from \"styled-components\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    marginBottom: \"30px\",\r\n    width: \"100%\",\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    flexBasis: \"33.33%\",\r\n    flexShrink: 0,\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  details: {\r\n    flexDirection: \"column\",\r\n  },\r\n  btn: {\r\n    marginLeft: \"10px\",\r\n  },\r\n  QuestionHeader: { backgroundColor: \"#f0fff0\"},\r\n  text: {\r\n    marginBottom: \"20px\",\r\n  }, \r\n}));\r\n\r\nconst FormStyle = styled.div`\r\n  .answer {\r\n    margin-right: 20px;\r\n    width: 40%;\r\n  }\r\n`;\r\nconst QuestionStyle = styled.div`\r\n  background-color: \"#f0fff0\";\r\n  margin-top: 32px;\r\n  &:first-child {\r\n    margin-top: 0;\r\n  }\r\n`;\r\n\r\nconst Question = ({\r\n  questionTitle,\r\n  answerQuestion,\r\n  answers,\r\n  id,\r\n  deleteQuestion,\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  const [expanded, setExpanded] = React.useState(\"\");\r\n  const [text, setText] = React.useState(\"\");\r\n\r\n  const handleChange = (panel) => (event, isExpanded) => {\r\n    setExpanded(isExpanded ? panel : false);\r\n  };\r\n\r\n  const onClickHandler = (event) => {\r\n    if (text !== \"\") {\r\n      answerQuestion(text);\r\n      setText(\"\");\r\n    }\r\n  };\r\n  return (\r\n    <QuestionStyle>\r\n      <ExpansionPanel\r\n        expanded={expanded === \"panel1\"}\r\n        onChange={handleChange(\"panel1\")}\r\n      >\r\n        <ExpansionPanelSummary\r\n          className={classes.QuestionHeader}\r\n          expandIcon={<ExpandMoreIcon />}\r\n          aria-controls=\"panel1bh-content\"\r\n          id=\"panel1bh-header\"\r\n        >\r\n          <Typography className={classes.heading}>{questionTitle}</Typography>\r\n        </ExpansionPanelSummary>\r\n\r\n        <ExpansionPanelDetails className={classes.details}>\r\n          <Typography className={classes.text}>{answers}</Typography>\r\n\r\n          <FormStyle>\r\n            <form className={classes.root} noValidate autoComplete=\"off\">\r\n              <TextField\r\n                onChange={(e) => setText(e.target.value)}\r\n                className=\"answer\"\r\n                id=\"standard-basic\"\r\n                label=\"Ответить\"\r\n              />\r\n              <Tooltip title=\"пока что недоступно\" arrow>\r\n                <IconButton onClick={onClickHandler} color=\"secondary\">\r\n                  <AddIcon />\r\n                </IconButton>\r\n              </Tooltip>\r\n              <Tooltip title=\"удалить вопрос\" arrow>\r\n                <IconButton\r\n                  onClick={() => {\r\n                    deleteQuestion(id);\r\n                  }}\r\n                  className={classes.btn}\r\n                  color=\"secondary\"\r\n                >\r\n                  <HighlightOffIcon />\r\n                </IconButton>\r\n              </Tooltip>\r\n            </form>\r\n          </FormStyle>\r\n        </ExpansionPanelDetails>\r\n      </ExpansionPanel>\r\n    </QuestionStyle>\r\n  );\r\n};\r\nexport default Question;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Question from \"./Question\";\r\nimport { answerQuestion, deleteQuestion } from \"../redux/actionCreators\";\r\n\r\nconst Questions = ({ questionItem, answerQuestion, deleteQuestion }) => {\r\n\r\n  return questionItem.map((question) => (\r\n    <Question\r\n      questionTitle={question.questionTitle}\r\n      key={question.id}\r\n      id = {question.id}\r\n      answers={question.answers}\r\n      answerQuestion={answerQuestion}\r\n      deleteQuestion={deleteQuestion}\r\n    />\r\n\r\n  ));\r\n};\r\n\r\nconst mapDispatchToProps = { answerQuestion, deleteQuestion };\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    questionItem: state.appQuestions.questionItem,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Questions);\r\n","import {\r\n  ADD_QUESTION,\r\n  ANSWER_QUESTION,\r\n  DELETE_QUESTION,\r\n  FETCH_MESSAGE,\r\n  SET_MESSAGE,\r\n  DELETE_MESSAGE,\r\n  HIDE_LOADER,\r\n  SHOW_LOADER,\r\n} from \"./actions\";\r\n\r\nexport function addQuestion(question) {\r\n  return {\r\n    type: ADD_QUESTION,\r\n    payload: question,\r\n  };\r\n}\r\nexport function answerQuestion(answer) {\r\n  return {\r\n    type: ANSWER_QUESTION,\r\n    payload: answer,\r\n  };\r\n}\r\nexport function deleteQuestion(id) {\r\n  return {\r\n    type: DELETE_QUESTION,\r\n    payload: id,\r\n  };\r\n}\r\nexport function setMessage(message) {\r\n  return {\r\n    type: SET_MESSAGE,\r\n    payload: message,\r\n  };\r\n}\r\n\r\nexport function showLoader() {\r\n  return {\r\n    type: SHOW_LOADER,\r\n  };\r\n}\r\nexport function hideLoader() {\r\n  return {\r\n    type: HIDE_LOADER,\r\n  };\r\n}\r\n\r\nexport function fetchedMessage(message) {\r\n  return (dispatch) => {\r\n    dispatch(showLoader());\r\n\r\n    dispatch({ type: FETCH_MESSAGE, payload: message });\r\n\r\n    dispatch(hideLoader());\r\n  };\r\n}\r\n\r\nexport function deleteMessage(id) {\r\n  return {\r\n    type: DELETE_MESSAGE,\r\n    payload: id,\r\n  };\r\n}\r\n","export const ADD_QUESTION = 'ADD_QUESTION'\r\nexport const ANSWER_QUESTION = 'ANSWER_QUESTION'\r\nexport const DELETE_QUESTION = 'DELETE_QUESTION'\r\nexport const SET_MESSAGE = 'SET_MESSAGE'\r\nexport const DELETE_MESSAGE = 'DELETE_MESSAGE'\r\nexport const FETCH_MESSAGE = 'FETCH_MESSAGE'\r\nexport const HIDE_LOADER = 'HIDE_LOADER'\r\nexport const SHOW_LOADER = 'SHOW_LOADER'","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst TitleStyle = styled.h2`\r\n  background: #7FFFD4;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-bottom: 32px;\r\n  padding: 0;\r\n\r\n`;\r\n\r\nexport const Title = () => {\r\n  return <TitleStyle>Общий чат</TitleStyle>;\r\n};\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Men from \"@material-ui/icons/SentimentSatisfiedAltTwoTone\";\r\nimport HighlightOffIcon from \"@material-ui/icons/HighlightOff\";\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\n\r\nconst MessageListStyle = styled.ul`\r\n  padding: 0 0 0 6px;\r\n  margin: 0;\r\n  width: 100%;\r\n  max-height: 50vh;\r\n  overflow: auto;\r\n  background: white;\r\n  border: 1px solid black;\r\n`;\r\nconst MessageItem = styled.li`\r\n  margin: 15px 0;\r\n  .message-wrap {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    background-color: #f0fff0;\r\n    font-weight: 500;\r\n    font-size: 24px;\r\n  }\r\n`;\r\n\r\nconst MessageList = ({ messages, deleteMessage, isLoading }) => {\r\n  console.log(isLoading);\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"spinner-border\" role=\"status\">\r\n        <span className=\"sr-only\">Loading...</span>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <MessageListStyle>\r\n      {messages.map((message) => {\r\n        return (\r\n          <MessageItem key={message.id}>\r\n            <div>{message.date} </div>\r\n\r\n            <div className=\"message-wrap\">\r\n              <div>\r\n                <IconButton color=\"primary\">\r\n                  <Men />\r\n                </IconButton>{\" \"}\r\n                {message.text}\r\n              </div>\r\n              <Tooltip title=\"удалить сообщение\" arrow>\r\n\r\n              <IconButton\r\n                onClick={() => {\r\n                  deleteMessage(message.id);\r\n                }}\r\n                color=\"secondary\"\r\n              >\r\n                <HighlightOffIcon />\r\n              </IconButton>\r\n              </Tooltip>\r\n            </div>\r\n          </MessageItem>\r\n        );\r\n      })}\r\n    </MessageListStyle>\r\n  );\r\n};\r\nexport default MessageList;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Popover from \"@material-ui/core/Popover\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport InsertEmoticonIcon from \"@material-ui/icons/InsertEmoticon\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  typography: {\r\n    padding: theme.spacing(2),\r\n  },\r\n  emoji: {\r\n      display: \"inline-flex\",\r\n      flexWrap: \"wrap\",\r\n      maxWidth: 200\r\n  },\r\n}));\r\n\r\nexport default function SmileComponent(props) {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const open = Boolean(anchorEl);\r\n  const id = open ? \"simple-popover\" : undefined;\r\n\r\n  return (\r\n    <div>\r\n      <Tooltip title=\"смайлы\" arrow>\r\n        <IconButton\r\n          className={classes.IconButton}\r\n          aria-describedby={id}\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          onClick={handleClick}\r\n          color=\"secondary\"\r\n        >\r\n          <InsertEmoticonIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n      <Popover\r\n        id={id}\r\n        open={open}\r\n        anchorEl={anchorEl}\r\n        onClose={handleClose}\r\n        anchorOrigin={{\r\n          vertical: \"bottom\",\r\n          horizontal: \"center\",\r\n        }}\r\n        transformOrigin={{\r\n          vertical: \"top\",\r\n          horizontal: \"center\",\r\n        }}\r\n      >\r\n        <Typography className={classes.typography}>\r\n          <div\r\n            className={classes.emoji}\r\n            onClick={(e) => props.smileChange(e.target.dataset.value)}\r\n          >\r\n            <span role=\"img\" data-value=\"&#128525;\" aria-label=\"love\">\r\n              &#128525;\r\n            </span>\r\n            <span role=\"img\" data-value=\"&#128513;\" aria-label=\"laugh\">\r\n              &#128513;\r\n            </span>\r\n            <span role=\"img\" data-value=\"&#128513;\" aria-label=\"joke\">\r\n              &#128518;\r\n            </span>\r\n            <span role=\"img\" data-value=\"&#128513;\" aria-label=\"evil\">\r\n              &#128520;\r\n            </span>\r\n            <span role=\"img\" data-value=\"&#128513;\" aria-label=\"cry\">\r\n              &#128549;\r\n            </span>\r\n            <span role=\"img\" data-value=\"&#128513;\" aria-label=\"surprise\">\r\n              &#128584;\r\n            </span>\r\n            <span role=\"img\" data-value=\"&#128513;\" aria-label=\"exiting\">\r\n              &#128562;\r\n            </span>\r\n            <span role=\"img\" data-value=\"&#128513;\" aria-label=\"virus\">\r\n              &#128567;\r\n            </span>\r\n          </div>\r\n        </Typography>\r\n      </Popover>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport SmileComponent from './Smiles'\r\n\r\nconst FormStyle = styled.form`\r\n  background-color: #f0fff0;\r\n  display: flex;\r\n  align-items: center;\r\n  margin-top: 20px;\r\n  height: 60px;\r\n  input {\r\n    width: 100%;\r\n    padding: 15px 10px;\r\n    border: none;\r\n    margin: 0;\r\n    font-weight: 200;\r\n  }\r\n  input::placeholder {\r\n    color: black;\r\n  }\r\n`;\r\n\r\nclass MessageForm extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      message: \"\",\r\n    };\r\n  }\r\n\r\n  handleChangeInput = (e) => {\r\n    this.setState({\r\n      message: e.target.value,\r\n    });\r\n  };\r\n  smileChange = (e) => {\r\n    let smile = e\r\n    this.setState((state) => {\r\n      return {message: state.message + smile};\r\n    });\r\n\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const newQuestion = {\r\n      date: new Date().toLocaleString(),\r\n      text: this.state.message,\r\n      id: 555 + Date.now().toString(),\r\n    };\r\n\r\n    this.props.setMessage(newQuestion);\r\n    this.setState({\r\n      message: \"\",\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <FormStyle onSubmit={this.handleSubmit}>\r\n        <input\r\n          onChange={this.handleChangeInput}\r\n          value={this.state.message}\r\n          placeholder=\"Введите значение и нажмите ENTER\"\r\n          type=\"text\"\r\n        />\r\n        <SmileComponent smileChange={this.smileChange}/>\r\n         \r\n      </FormStyle>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MessageForm;\r\n","import React from \"react\";\r\nimport { Title } from \"./Title\";\r\nimport MessageList from \"./MessageList\";\r\nimport { connect } from \"react-redux\";\r\nimport MessageForm from \"./MessageForm\";\r\nimport {\r\n  setMessage,\r\n  deleteMessage,\r\n  fetchedMessage,\r\n} from \"../../redux/actionCreators\";\r\n\r\nimport axios from \"axios\";\r\n\r\nclass ChatComponent extends React.Component {\r\n  componentDidMount() {\r\n    const { fetchedMessage } = this.props;\r\n\r\n    axios.get(\"./messages.json\").then((response) => {\r\n      //искусственная задержка\r\n      setTimeout(()=> {\r\n        fetchedMessage(response.data);\r\n      },1000)     \r\n    });\r\n  }\r\n  render() {\r\n\r\n    return (\r\n      <div className=\"app\">\r\n        <Title /> \r\n\r\n        <MessageList\r\n          messages={this.props.messages}\r\n          deleteMessage={this.props.deleteMessage}\r\n          isLoading = {this.props.isLoading}\r\n        />\r\n        <MessageForm setMessage={this.props.setMessage} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapDispachToProps = {\r\n  setMessage,\r\n  deleteMessage,\r\n  fetchedMessage,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  messages: state.appChat.messages,\r\n  isLoading: state.app.loading,\r\n});\r\nexport default connect(mapStateToProps, mapDispachToProps)(ChatComponent);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { addQuestion } from \"../redux/actionCreators\";\r\n\r\nclass AddQuestion extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      title: \"\",\r\n    };\r\n  }\r\n  submitHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    const newQuestion = {\r\n      questionTitle: this.state.title,\r\n      id: Date.now().toString(),\r\n    };\r\n\r\n    if(this.state.title) {\r\n     this.props.addQuestion(newQuestion);\r\n    }\r\n   \r\n    this.setState({ title: \"\" });\r\n  };\r\n  changeInputHandler = (event) => {\r\n    this.setState({ title: event.target.value });\r\n\r\n    console.log(this.state);\r\n  };\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.submitHandler}>\r\n        {this.props.alert && (\r\n          <div class=\"alert alert-warning\" role=\"alert\">\r\n            {this.props.alert}\r\n          </div>\r\n        )}\r\n\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"title\">Ваш вопрос</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"title\"\r\n            name=\"title\"\r\n            value={this.state.title}\r\n            onChange={this.changeInputHandler}\r\n          />\r\n        </div>\r\n        <button className=\"btn btn-success\" type=\"submit\">\r\n          Задать вопрос\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispachToProps = {\r\n  addQuestion,\r\n};\r\nconst mapStateToProps = (state) => ({});\r\nexport default connect(mapStateToProps, mapDispachToProps)(AddQuestion);\r\n","import React from \"react\";\r\nimport img from \"../img/unnamed.jpg\"\r\n\r\nexport const About = () => {\r\n  return (\r\n    <>\r\n        <div className=\"col-12 mb-5\">\r\n          <div className=\"text-center\">\r\n            <h2>Внутренний портал для сотрудников компаний</h2>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"col-6\">\r\n            <img width='500' src={img} alt=\"\"/>\r\n        </div>\r\n        <div className=\"col-6 d-flex align-items-center\">\r\n            <p >\r\n              Lorem ipsum dolor sit amet consectetur adipisicing elit.\r\n              Reprehenderit asperiores repellat nemo soluta libero consequuntur\r\n              autem expedita, earum possimus enim architecto iusto voluptatem\r\n              deleniti officiis sed dicta aperiam itaque iste maxime quis? Ea\r\n              ipsa voluptas cumque ratione facilis illo maxime velit saepe ab\r\n              beatae consequatur aspernatur a, consectetur quia veritatis?\r\n              Perspiciatis quibusdam eos vero beatae assumenda. Neque tempore\r\n              in, sit ex quod adipisci explicabo, culpa voluptatem commodi\r\n              suscipit necessitatibus eligendi molestiae blanditiis dolores\r\n              dolore fugiat ducimus accusamus dolorum? Qui itaque optio\r\n              voluptatibus nobis! Consectetur accusantium ab dolore obcaecati\r\n              ipsa laboriosam amet non, voluptatibus unde perferendis nesciunt\r\n              eligendi fuga placeat reprehenderit.\r\n          </p>\r\n        </div>\r\n    </>\r\n  );\r\n};\r\nexport default About;\r\n","import React from 'react'\r\n\r\n\r\nexport const QuestionTitle = () => {\r\n    return (\r\n        <h2 className=\"text-center mt-3\">Часто задаваемые вопросы</h2>\r\n    )\r\n}","import React from \"react\";\r\nimport { Menu } from \"./components/Menu\";\r\nimport Questions from \"./components/Questions\";\r\n\r\nimport ChatComponent from \"./components/chat/ChatComponent\";\r\nimport AddQuestion from \"./components/AddQuestion\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport About from \"./components/About\";\r\nimport { QuestionTitle } from \"./components/QuestionTitle\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n        <div className=\"container-fluid \">\r\n          <div className=\"row\">\r\n            <div className=\"col\">\r\n              <Menu />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"container \">\r\n          <div className=\"row mt-3\">\r\n            <div className=\"col-12 mb-3\">\r\n              <Route path=\"/questions\" render={() => <QuestionTitle />} />\r\n            </div>\r\n            <div className=\"col-12 \">\r\n              <Route path=\"/questions\" render={() => <Questions />} />\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col-6 mt-3\">\r\n              <Route path=\"/questions\" render={() => <AddQuestion />} />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"row mt-3\">\r\n            <div className=\"col \">\r\n              <Route path=\"/chat\" render={() => <ChatComponent />} />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"row\">\r\n            <Route exact path=\"/\" render={() => <About />} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import { ADD_QUESTION, ANSWER_QUESTION, DELETE_QUESTION } from \"./actions\";\r\n\r\nconst initialState = {\r\n  questionItem: [\r\n    {\r\n      questionTitle: \"Чем заняться на карантине?\",\r\n      id: 1 + Date.now().toString(),\r\n      answers: \"сделать что-нибудь полезное\", \r\n    },\r\n    {\r\n      questionTitle: \"Чем заняться на карантине?\",\r\n      id: 2 + Date.now().toString(),\r\n      answers: \"прочитать книгу\" \r\n    },\r\n  ],\r\n \r\n};\r\n\r\nexport const questionReducer = (state = initialState, action) => {\r\n\r\n  switch (action.type) {\r\n    case ADD_QUESTION:\r\n      return {\r\n        ...state,\r\n        questionItem: [...state.questionItem, action.payload],\r\n      };\r\n\r\n    case ANSWER_QUESTION:\r\n      return {\r\n        ...state,\r\n        answers: [...state.questionItem, action.payload],\r\n      };\r\n    case DELETE_QUESTION:\r\n      return {\r\n        ...state,\r\n        questionItem: state.questionItem.filter(\r\n          (question) => question.id !== action.payload\r\n        ),\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {  SET_MESSAGE, DELETE_MESSAGE, FETCH_MESSAGE } from \"./actions\";\r\n\r\nconst initialState = {\r\n  messages: [\r\n    // {\r\n    //   date: new Date().toLocaleString(),\r\n    //   text: \"как дела?\",\r\n    //   id: 555 + Date.now().toString(),\r\n    // },\r\n    // {\r\n    //   date: new Date().toLocaleString(),\r\n    //   text: \"привет!\",\r\n    //   id: 2222 + Date.now().toString(),\r\n    // }\r\n  ]\r\n};\r\n\r\nexport const messageReducer = (state = initialState, action) => {\r\n\r\n  switch (action.type) {\r\n    case SET_MESSAGE:\r\n      return {\r\n        ...state,\r\n        messages: [...state.messages, action.payload],\r\n      };\r\n    case DELETE_MESSAGE:\r\n      return {\r\n        ...state,\r\n        messages: state.messages.filter(\r\n          (message) => message.id !== action.payload\r\n        ),\r\n      };\r\n    case FETCH_MESSAGE: \r\n      return {...state, messages: action.payload}\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { SHOW_LOADER, HIDE_LOADER } from \"./actions\";\r\n\r\nconst initialState = {\r\n  loading: true,\r\n};\r\n\r\nexport const appReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SHOW_LOADER:\r\n      return { ...state, loading: true };\r\n    case HIDE_LOADER:\r\n      return { ...state, loading: false };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {combineReducers} from 'redux'\r\nimport {questionReducer} from './questionReducer'\r\nimport {messageReducer} from './messageReducer'\r\nimport {appReducer} from './appReducer'\r\n\r\nexport const mainReducer = combineReducers({\r\n  appQuestions: questionReducer,\r\n  appChat: messageReducer,\r\n  app: appReducer\r\n})","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {compose, createStore, applyMiddleware} from 'redux'\r\nimport {Provider} from 'react-redux'\r\nimport thunk from 'redux-thunk'\r\nimport { mainReducer } from './redux/mainReducer';\r\n\r\nconst store = createStore(mainReducer, compose(\r\n  applyMiddleware(\r\n    thunk\r\n  ),\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n))\r\n\r\nconst app = (\r\n  <Provider store={store}>\r\n    <App/>\r\n  </Provider>\r\n)\r\n\r\n\r\nReactDOM.render(\r\n  app,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/unnamed.bce5fe6d.jpg\";"],"sourceRoot":""}